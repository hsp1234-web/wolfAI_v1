'use client';\n\nimport React, { useState, useEffect } from 'react';\n\ninterface ModelSelectorProps {\n  selectedModel: string;\n  onModelChange: (model: string) => void;\n  disabled?: boolean; // To disable selector if API key is not set, for example\n}\n\nconst AVAILABLE_MODELS = [\n  { id: 'gemini-1.5-pro-latest', name: 'Gemini 1.5 Pro (最新)' },\n  { id: 'gemini-1.5-flash-latest', name: 'Gemini 1.5 Flash (最新)' },\n  // 可以根據需要添加更多模型\n  // { id: 'gemini-pro', name: 'Gemini Pro' }, \n];\n\nconst ModelSelector: React.FC<ModelSelectorProps> = ({ selectedModel, onModelChange, disabled = false }) => {\n  // 如果外部沒有提供有效的 selectedModel，或者提供的 selectedModel 不在列表中，則設置一個預設值\n  const [internalModel, setInternalModel] = useState(() => {\n    const isValidExternalModel = AVAILABLE_MODELS.some(m => m.id === selectedModel);\n    return isValidExternalModel ? selectedModel : AVAILABLE_MODELS[0]?.id || '';\n  });\n\n  useEffect(() => {\n    // 當外部 selectedModel 改變且有效時，同步內部狀態\n    const isValidExternalModel = AVAILABLE_MODELS.some(m => m.id === selectedModel);\n    if (isValidExternalModel && selectedModel !== internalModel) {\n      setInternalModel(selectedModel);\n    }\n  }, [selectedModel, internalModel]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newModel = event.target.value;\n    setInternalModel(newModel);\n    onModelChange(newModel);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px', padding: '10px', border: '1px solid #ddd', borderRadius: '4px', background: '#f9f9f9' }}>\n      <label htmlFor='model-selector' style={{ marginRight: '10px', fontWeight: 'bold', color: '#333' }}>\n        選擇 AI 模型:\n      </label>\n      <select \n        id='model-selector' \n        value={internalModel} \n        onChange={handleChange} \n        disabled={disabled}\n        style={{ \n          padding: '8px 12px', borderRadius: '4px', border: '1px solid #ccc', \n          minWidth: '200px', fontSize: '1em', cursor: disabled ? 'not-allowed' : 'pointer'\n        }}\n      >\n        {AVAILABLE_MODELS.map(model => (\n          <option key={model.id} value={model.id}>\n            {model.name}\n          </option>\n        ))}\n      </select>\n      {disabled && <p style={{fontSize: '0.8em', color: 'red', marginTop: '5px'}}> (API 金鑰未設定時禁用) </p>}\n    </div>\n  );\n};\n\nexport default ModelSelector;\n
